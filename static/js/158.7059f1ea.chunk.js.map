{"version":3,"file":"static/js/158.7059f1ea.chunk.js","mappings":"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","sources":["components/Chart/Chart.jsx","components/StatisticsDashboard/StatisticsDashboard.jsx","components/StatisticsTable/StatisticsTable.jsx","pages/StatisticsTab/StatisticsTab.jsx","redux/transactions/selectors.js"],"sourcesContent":["import styled from \"styled-components\";\nimport { Chart as ChartJS, ArcElement, Tooltip, Legend } from \"chart.js\";\nimport { Doughnut } from \"react-chartjs-2\";\nimport { useSelector } from \"react-redux\";\nimport {\n  selectCategoriesSummary,\n  selectPeriodTotal,\n} from \"../../redux/transactions/selectors\";\nimport { useMediaQuery } from \"react-responsive\";\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\nconst Container = styled.div`\n  display: flex;\n  justify-content: center;\n`;\n\nconst ChartContainer = styled.div`\n  padding-bottom: 32px;\n  position: relative;\n  width: fit-content;\n`;\n\nconst options = {\n  borderWidth: 0,\n  cutout: \"72%\",\n};\n\nconst plugins = [\n  {\n    id: \"shadow\",\n    beforeDraw: function (chart) {\n      const { ctx } = chart;\n\n      ctx.shadowColor = \"rgba(0,0,0,1)\";\n      ctx.shadowOffsetX = 0;\n      ctx.shadowOffsetY = 0;\n      ctx.shadowBlur = 8;\n    },\n  },\n];\n\nconst colors = [\n  \"#fed057\",\n  \"#ffd8d0\",\n  \"#fd9498\",\n  \"#c5baff\",\n  \"#6e78e8\",\n  \"#4a56e2\",\n  \"#81e1ff\",\n  \"#24cca7\",\n  \"#00ad84\",\n];\n\nconst Chart = () => {\n  const periodTotal = useSelector(selectPeriodTotal);\n  const transactionCategories = useSelector(selectCategoriesSummary);\n\n  let categories = [];\n\n  if (periodTotal > 0) {\n    categories = transactionCategories.map((transactionCategorie) => {\n      const name = transactionCategorie.name;\n      const total = transactionCategorie.total;\n      const color = colors[transactionCategories.indexOf(transactionCategorie)];\n      return {\n        name,\n        total,\n        color,\n      };\n    });\n  }\n\n  const categoriesTotal = categories.map((categorie) => {\n    return categorie.total;\n  });\n\n  const categoriesColor = categories.map((categorie) => {\n    return categorie.color;\n  });\n\n  const isMobileView = useMediaQuery({ maxWidth: 767 });\n  const isTabletView = useMediaQuery({ maxWidth: 1279 });\n\n  const data = {\n    labels: [],\n    datasets: [\n      {\n        data: [],\n        backgroundColor: [],\n      },\n    ],\n  };\n\n  if (periodTotal === 0) {\n    data.datasets[0].data = [1];\n    data.datasets[0].backgroundColor = [\"#00000026\"];\n  } else {\n    data.datasets[0].data = categoriesTotal;\n    data.datasets[0].backgroundColor = categoriesColor;\n  }\n\n  const StyledChart = styled.div`\n    width: ${isMobileView ? \"280px\" : \"336px\"};\n    width: ${!isTabletView && \"288px\"};\n    height: ${isMobileView ? \"280px\" : \"336px\"};\n    height: ${!isTabletView && \"288px\"};\n  `;\n\n  const InsideChartText = styled.span`\n    position: absolute;\n    top: ${isMobileView ? \"135px\" : \"165px\"};\n    top: ${!isTabletView && \"140px\"};\n    left: ${isMobileView ? \"50px\" : \"80px\"};\n    left: ${!isTabletView && \"55px\"};\n    font-weight: 600;\n    font-size: 18px;\n    line-height: 27px;\n    width: 180px;\n    text-align: center;\n  `;\n\n  return (\n    <Container>\n      <ChartContainer>\n        <StyledChart>\n          <Doughnut data={data} options={options} plugins={plugins} />\n        </StyledChart>\n        <InsideChartText>${periodTotal.toFixed(2)}</InsideChartText>\n      </ChartContainer>\n    </Container>\n  );\n};\n\nexport default Chart;\n","import styled from \"styled-components\";\nimport Select from \"react-select\";\nimport { useDispatch } from \"react-redux\";\nimport { useEffect, useState } from \"react\";\nimport { fetchTransactionsSummary } from \"../../redux/transactions/operations\";\n\nconst months = [\n  {\n    value: 1,\n    label: \"January\",\n  },\n  {\n    value: 2,\n    label: \"February\",\n  },\n  {\n    value: 3,\n    label: \"March\",\n  },\n  {\n    value: 4,\n    label: \"April\",\n  },\n  {\n    value: 5,\n    label: \"May\",\n  },\n  {\n    value: 6,\n    label: \"June\",\n  },\n  {\n    value: 7,\n    label: \"July\",\n  },\n  {\n    value: 8,\n    label: \"August\",\n  },\n  {\n    value: 9,\n    label: \"September\",\n  },\n  {\n    value: 10,\n    label: \"October\",\n  },\n  {\n    value: 11,\n    label: \"November\",\n  },\n  {\n    value: 12,\n    label: \"December\",\n  },\n];\n\nconst years = [\n  {\n    value: 2020,\n    label: \"2020\",\n  },\n  {\n    value: 2021,\n    label: \"2021\",\n  },\n  {\n    value: 2022,\n    label: \"2022\",\n  },\n  {\n    value: 2023,\n    label: \"2023\",\n  },\n  {\n    value: 2024,\n    label: \"2024\",\n  },\n];\n\nfunction getCurrentDate() {\n  const month = new Date().getMonth() + 1;\n  const year = new Date().getFullYear();\n\n  return { month, year };\n}\n\nconst selectStyling = {\n  container: (styles) => ({\n    ...styles,\n    width: \"100%\",\n  }),\n  control: (styles, state) => ({\n    ...styles,\n    backgroundColor: \"rgba(74,86,226,0.1)\",\n    borderColor: state.isFocused ? \"white\" : \"rgba(255,255,255,0.6)\",\n    \"&:hover\": {\n      borderColor: \"white\",\n    },\n    boxShadow: \"none\",\n  }),\n  singleValue: (styles) => ({\n    ...styles,\n    color: \"white\",\n  }),\n  option: (styles, state) => ({\n    ...styles,\n    backgroundColor: state.isSelected && \"rgba(255,255,255,0.1)\",\n    color: state.isSelected && \"rgb(255,134,141)\",\n    \"&:hover\": {\n      backgroundColor: \"rgba(255,255,255,0.1)\",\n    },\n  }),\n  menu: (styles) => ({\n    ...styles,\n    background:\n      \"linear-gradient(to top, rgb(83, 61, 186), rgb(80, 48, 154), rgb(106, 70, 165), rgb(133,93,175))\",\n  }),\n};\n\nconst Container = styled.div`\n  display: flex;\n  padding-bottom: 20px;\n  width: 100%;\n  gap: 32px;\n\n  @media screen and (max-width: 768px) {\n    gap: 20px;\n    flex-direction: row;\n  }\n\n  @media screen and (max-width: 320px) {\n    flex-direction: column;\n    gap: 16px;\n  }\n`;\n\nconst StatisticsDashboard = () => {\n  const [month, setMonth] = useState(\"\");\n  const [year, setYear] = useState(\"\");\n\n  const dispatch = useDispatch();\n  const currentDate = getCurrentDate();\n\n  useEffect(() => {\n    const date = getCurrentDate();\n    setMonth(date.month);\n    setYear(date.year);\n  }, []);\n\n  useEffect(() => {\n    if (month.toString().length > 0 && year.toString().length > 0) {\n      dispatch(fetchTransactionsSummary({ month, year }));\n    }\n  }, [month, year, dispatch]);\n\n  return (\n    <Container>\n      <Select\n        options={months}\n        styles={selectStyling}\n        defaultValue={() =>\n          months.find((item) => item.value === currentDate.month)\n        }\n        onChange={(newMonth) => {\n          setMonth(newMonth.value);\n        }}\n      />\n      <Select\n        options={years}\n        styles={selectStyling}\n        defaultValue={() =>\n          years.find((item) => item.value === currentDate.year)\n        }\n        onChange={(newYear) => {\n          setYear(newYear.value);\n        }}\n      />\n    </Container>\n  );\n};\n\nexport default StatisticsDashboard;\n","import { useSelector } from \"react-redux\";\nimport {\n  selectCategoriesSummary,\n  selectExpenseSummary,\n  selectIncomeSummary,\n  selectPeriodTotal,\n} from \"../../redux/transactions/selectors\";\nimport styled from \"styled-components\";\nimport { useMediaQuery } from \"react-responsive\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst Columns = styled.ul`\n  display: flex;\n  justify-content: space-between;\n  padding: 16px;\n  background-color: rgba(82, 59, 126, 0.6);\n  border-radius: 8px;\n`;\n\nconst Column = styled.li`\n  font-weight: 600;\n  font-size: 16px;\n  line-height: 24px;\n`;\n\nconst CategoryList = styled.ul`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst LeftSide = styled.div`\n  display: flex;\n  gap: 16px;\n  align-items: center;\n`;\n\nconst Color = styled.span`\n  width: 24px;\n  height: 24px;\n`;\n\nconst Name = styled.span`\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 21px;\n`;\n\nconst Sum = styled.span`\n  font-weight: 400;\n  font-size: 14px;\n  line-height: 21px;\n`;\n\nconst Message = styled.span`\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 21px;\n`;\n\nconst Expenses = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst Income = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n\nconst TotalName = styled.span`\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 21px;\n`;\n\nconst ExpensesSum = styled.span`\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 21px;\n  color: rgb(255, 134, 141);\n`;\n\nconst IncomeSum = styled.span`\n  font-weight: 600;\n  font-size: 14px;\n  line-height: 21px;\n  color: rgb(255, 182, 39);\n`;\n\nconst colors = [\n  \"#fed057\",\n  \"#ffd8d0\",\n  \"#fd9498\",\n  \"#c5baff\",\n  \"#6e78e8\",\n  \"#4a56e2\",\n  \"#81e1ff\",\n  \"#24cca7\",\n  \"#00ad84\",\n];\n\nconst StatisticsTable = () => {\n  const total = useSelector(selectPeriodTotal);\n  const expenses = useSelector(selectExpenseSummary);\n  const income = useSelector(selectIncomeSummary);\n  const transactionCategories = useSelector(selectCategoriesSummary);\n\n  let categories = [];\n\n  if (total > 0) {\n    categories = transactionCategories.map((transactionCategorie) => {\n      const name = transactionCategorie.name;\n      const total = transactionCategorie.total;\n      const color = colors[transactionCategories.indexOf(transactionCategorie)];\n      return {\n        name,\n        total,\n        color,\n      };\n    });\n  }\n\n  const isDesktopView = useMediaQuery({ minWidth: 1280 });\n\n  const Category = styled.li`\n    height: 52px;\n    padding: ${isDesktopView ? \"0 28px\" : \"0 16px\"};\n    display: flex;\n    align-items: center;\n    border-bottom: 1px solid rgba(255, 255, 255, 0.2);\n    justify-content: space-between;\n  `;\n\n  const Totals = styled.div`\n    display: flex;\n    flex-direction: column;\n    gap: 16px;\n    padding: ${isDesktopView ? \"16px 28px\" : \"16px\"};\n  `;\n\n  const MessageContainer = styled.div`\n    padding: ${isDesktopView ? \"28px 28px 12px 28px\" : \"16px 16px 0 16px\"};\n  `;\n\n  return (\n    <Container>\n      <Columns>\n        <Column>Category</Column>\n        <Column>Sum</Column>\n      </Columns>\n      {total > 0 ? (\n        <CategoryList>\n          {categories.map((category) => (\n            <Category key={category.name}>\n              <LeftSide>\n                <Color style={{ backgroundColor: category.color }}></Color>\n                <Name>{category.name}</Name>\n              </LeftSide>\n              <Sum>{category.total.toFixed(2)}</Sum>\n            </Category>\n          ))}\n        </CategoryList>\n      ) : (\n        <MessageContainer>\n          <Message>You don't have any transactions in this period</Message>\n        </MessageContainer>\n      )}\n      <Totals>\n        <Expenses>\n          <TotalName>Expenses:</TotalName>\n          <ExpensesSum>{expenses.toFixed(2)}</ExpensesSum>\n        </Expenses>\n        <Income>\n          <TotalName>Income:</TotalName>\n          <IncomeSum>{income.toFixed(2)}</IncomeSum>\n        </Income>\n      </Totals>\n    </Container>\n  );\n};\n\nexport default StatisticsTable;\n","import Chart from \"components/Chart/Chart\";\nimport styled from \"styled-components\";\nimport StatisticsDashboard from \"components/StatisticsDashboard/StatisticsDashboard\";\nimport StatisticsTable from \"components/StatisticsTable/StatisticsTable\";\nimport { useMediaQuery } from \"react-responsive\";\n\nconst Section = styled.section`\n  height: 100vh;\n`;\n\nconst LeftSide = styled.div``;\n\nconst StatisticsTab = () => {\n  const isMobileView = useMediaQuery({ maxWidth: 767 });\n  const isTabletView = useMediaQuery({ maxWidth: 1279 });\n\n  const Container = styled.div`\n    display: flex;\n    flex-direction: ${isMobileView ? \"column\" : \"row\"};\n    padding: ${isMobileView ? \"8px 20px 45px\" : \"0 32px 13px\"};\n    padding: ${!isTabletView && \"32px 16px 46px 0\"};\n    gap: ${!isMobileView && \"32px\"};\n    justify-content: space-between;\n  `;\n\n  const Title = styled.h2`\n    font-weight: 400;\n    font-size: 30px;\n    line-height: 45px;\n    padding-bottom: ${isMobileView ? \"8px\" : \"20px\"};\n  `;\n\n  const RightSide = styled.div`\n    width: 100%;\n    padding-top: ${!isMobileView && \"20px\"};\n    max-width: 395px;\n  `;\n\n  return (\n    <Section>\n      <Container>\n        <LeftSide>\n          <Title>Statistics</Title>\n          <Chart />\n        </LeftSide>\n        <RightSide>\n          <StatisticsDashboard />\n          <StatisticsTable />\n        </RightSide>\n      </Container>\n    </Section>\n  );\n};\n\nexport default StatisticsTab;\n","import { createSelector } from \"reselect\";\n\nexport const selectTransactions = (state) => state.transactions.transactions;\n// state.transactions.transactions.items;\n\nexport const selectLoading = (state) =>\n  state.transactions.transactions.isLoading;\n\nexport const selectError = (state) => state.transactions.transactions.error;\n\nexport const selectCategories = (state) =>\n  state.transactions.transactions.categories;\n\nexport const selectAllCategories = createSelector(\n  [selectCategories],\n  (categories) => {\n    return categories;\n  }\n);\n\nexport const selectFIltered = (state, sortCriteria) => {\n  const transactions = selectTransactions(state);\n  const categories = selectCategories(state);\n\n  const sortedTransactions = [...transactions];\n  switch (sortCriteria.value) {\n    case \"date\":\n      sortedTransactions.sort((a, b) => {\n        const dateA = new Date(a.transactionDate);\n        const dateB = new Date(b.transactionDate);\n\n        return sortCriteria.isReverse ? dateA - dateB : dateB - dateA;\n      });\n      break;\n    case \"amount\":\n      sortedTransactions.sort((a, b) => {\n        return sortCriteria.isReverse\n          ? b.amount - a.amount\n          : a.amount - b.amount;\n      });\n      break;\n    case \"category\":\n      sortedTransactions.sort((a, b) => {\n        const categoryA =\n          categories.find((cat) => cat.id === a.categoryId)?.name || \"\";\n        const categoryB =\n          categories.find((cat) => cat.id === b.categoryId)?.name || \"\";\n\n        return sortCriteria.isReverse\n          ? categoryB.localeCompare(categoryA)\n          : categoryA.localeCompare(categoryB);\n      });\n      break;\n    default:\n      return sortedTransactions.sort(\n        (a, b) => new Date(b.transactionDate) - new Date(a.transactionDate)\n      );\n  }\n\n  return sortedTransactions;\n};\n\nexport const selectCategoriesSummary = (state) =>\n  state.transactions.summary.categoriesSummary;\n\nexport const selectIncomeSummary = (state) =>\n  state.transactions.summary.incomeSummary;\n\nexport const selectExpenseSummary = (state) =>\n  state.transactions.summary.expenseSummary;\n\nexport const selectPeriodTotal = (state) =>\n  state.transactions.summary.periodTotal;\n\nexport const selectYear = (state) => state.transactions.summary.year;\n\nexport const selectMonth = (state) => state.transactions.summary.month;\n"],"names":["ChartJS","register","ArcElement","Tooltip","Legend","Container","styled","div","_templateObject","_taggedTemplateLiteral","ChartContainer","_templateObject2","options","borderWidth","cutout","plugins","id","beforeDraw","chart","ctx","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","colors","Chart","periodTotal","useSelector","selectPeriodTotal","transactionCategories","selectCategoriesSummary","categories","map","transactionCategorie","name","total","color","indexOf","categoriesTotal","categorie","categoriesColor","isMobileView","useMediaQuery","maxWidth","isTabletView","data","labels","datasets","backgroundColor","StyledChart","_templateObject3","InsideChartText","span","_templateObject4","_jsx","children","_jsxs","Doughnut","toFixed","months","value","label","years","getCurrentDate","month","Date","getMonth","year","getFullYear","selectStyling","container","styles","width","control","state","borderColor","isFocused","boxShadow","singleValue","option","isSelected","menu","background","StatisticsDashboard","setMonth","useState","setYear","dispatch","useDispatch","currentDate","useEffect","date","toString","length","fetchTransactionsSummary","Select","defaultValue","find","item","onChange","newMonth","newYear","Columns","ul","Column","li","CategoryList","LeftSide","_templateObject5","Color","_templateObject6","Name","_templateObject7","Sum","_templateObject8","Message","_templateObject9","Expenses","_templateObject10","Income","_templateObject11","TotalName","_templateObject12","ExpensesSum","_templateObject13","IncomeSum","_templateObject14","StatisticsTable","expenses","selectExpenseSummary","income","selectIncomeSummary","isDesktopView","minWidth","Category","_templateObject15","Totals","_templateObject16","MessageContainer","_templateObject17","category","style","Section","section","StatisticsTab","Title","h2","RightSide","selectTransactions","transactions","selectCategories","selectAllCategories","createSelector","summary","categoriesSummary","incomeSummary","expenseSummary"],"sourceRoot":""}